open System

let hex (bytes: seq<byte>) =
    bytes
    |> Seq.map (fun b -> Convert.ToString(b, 16).PadLeft(2, '0'))
    |> String.concat ""

let b64tohex s =
    Convert.FromBase64String(s) |> hex

let sources = [
        "G+glEae6W/1XjA7vRm21nNyEco/c+J2TdR0Qp8dcjPJaqeuLbHD2JDHPyKLktXEFc4pf+0pFACRndRda5Za71vNN8znGntzhH2ZQu87WJwI="
        "G+glEae6W/1XjA7vRm21nNyEco/c+J2TdR0Qp8dcjPJaqeuLbHD2JDHPyKLktXEFtBWBBmwHDZMabpsJNVb/DSkofzzFR54S5m8xyGOxgEdW1XMtyMdw9kOXFYvBem5m"
        "G+glEae6W/1XjA7vRm21nNyEco/c+J2TdR0Qp8dcjPJaqeuLbHD2JDHPyKLktXEFfltOT3a4zKBPvHc83YmfkQDkmZ3Y6KyXXEH/PHuE4AZCV6ND2q2q8sDjodcc4D3Re3usplXymKMh6Q4/emDU2A=="
    ]

let hexSources = 
    sources |> List.map b64tohex

let blockSize = (hexSources.[1].Length - hexSources.[0].Length) / 2

let chunkhex (s: string) = Seq.chunkBySize (blockSize * 2) s |> Seq.map (fun ca -> String(ca)) |> Seq.toArray